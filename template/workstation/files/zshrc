ZSSH_IDS=(id_ed25519)

# Emacs binding
bindkey -e

# Configures prompt
autoload -Uz promptinit
promptinit

# Configures custom autocomplete
autoload -Uz compinit && compinit -i
autoload -U colors && colors
export CLICOLOR=true

# Configures default editor
export EDITOR=vim
export VISUAL=vim

# Configures history
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000

setopt EXTENDED_HISTORY     # Save timestamps along with commands.
setopt BANG_HIST            # Perform textual history expansion, csh-style.
setopt EXTENDED_HISTORY     # Add new history line to the ${HISTFILE} incrementally.
setopt SHARE_HISTORY        # Shares history across all sessions.
setopt HIST_IGNORE_DUPS     # No duplicate line in the history.
setopt HIST_IGNORE_ALL_DUPS # Keep the latest command in the history.
setopt HIST_IGNORE_SPACE    # Not append line when line start with space.
setopt HIST_SAVE_NO_DUPS    # Older commands that duplicate newer ones are omitted.
setopt HIST_VERIFY          # Perform history expansion and reload the line into the editing buffer.

# Configure smart URL poasting and escaping
autoload -Uz bracketed-paste-url-magic
zle -N bracketed-paste bracketed-paste-url-magic
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# Configure go
export GOPATH=$(go env GOPATH)
export PATH=$GOPATH/bin:$PATH

# Configure erlang
ERL_AFLAGS="+pc unicode"
ERL_AFLAGS="$ERL_AFLAGS -kernel shell_history enabled"
ERL_AFLAGS="$ERL_AFLAGS -kernel shell_history_path '\"$HOME/.erl_history\"'"

export ERL_AFLAGS
export PATH=$HOME/.cache/rebar3/bin:$PATH

# Configure ruby
eval "$(rbenv init - zsh)"

export PATH=$HOME/.rbenv/shims:$PATH
export PATH=$HOME/.rbenv/versions:$PATH

export IRBRC=$HOME/.irbrc

# Configure python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# Configure rust
export PATH=$HOME/.cargo/bin:$PATH

# Configure ripgrep
export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc

# FZF
source /usr/local/share/examples/fzf/shell/completion.zsh
source /usr/local/share/examples/fzf/shell/key-bindings.zsh

# Configure docker
export DOCKER_HOST=tcp://10.0.1.2:3232

# SSH
SSH_ENV=/tmp/$USER/ssh-agent.env
SSH_SOCK=/tmp/$USER/ssh-agent.sock

# start ssh-agent if not already running
if [[ ! -S $SSH_AUTH_SOCK ]]; then
    # read environment if possible
    source $SSH_ENV 2> /dev/null

    if ! ps -U ${LOGNAME} -o pid,ucomm | grep -q -- "${SSH_AGENT_PID:--1} ssh-agent"; then
        eval "$(ssh-agent | sed '/^echo /d' | tee ${SSH_ENV})"
    fi
fi

# create socket
if [[ -S $SSH_AUTH_SOCKET && $SSH_AUTH_SOCKET != $SSH_SOCK ]]; then
    ln -sf $SSH_AUTH_SOCKET $SSH_SOCK
    export SSH_AUTH_SOCKET=$SSH_SOCK
fi

# load keys
if ssh-add -l 2>&1 | grep -q 'no identities'; then
    if (( ${#ZSSH_IDS} > 0 )); then
        ssh-add "$HOME/.ssh/${^ZSSH_IDS[@]}" 2> /dev/null
    else
        ssh-add 2> /dev/null
    fi
fi

unset SSH_{ENV,SOCK}

# Alias
alias l="ls -fF"
alias la="ls -laF"
alias g=git
alias d=docker
alias k=kubectl
alias cat=bat
alias v=vim
